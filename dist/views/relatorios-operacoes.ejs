<!doctype html>
<html lang="pt-br">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <title>Relatórios — Operações</title>
  <style>
    :root{--bg:#0b1220;--panel:#0f172a;--panel2:#111827;--border:#1f2937;--text:#e5e7eb;--muted:#9ca3af}
    *{box-sizing:border-box}
    body{margin:0;background:var(--bg);color:var(--text);font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Arial}
    .container{max-width:1160px;margin:0 auto;padding:20px}
    .card{background:linear-gradient(180deg,var(--panel),var(--panel2));border:1px solid var(--border);border-radius:14px;padding:14px}
    .grid{display:grid;gap:12px}
    .grid-2{grid-template-columns:1.2fr .8fr}
    .kpi{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:12px}
    .box{padding:12px;border:1px solid var(--border);border-radius:12px}
    .box .label{font-size:12px;color:var(--muted)}
    .box .value{font-size:24px;font-weight:700;margin-top:2px}
    .muted{color:var(--muted)}
    table{width:100%;border-collapse:collapse;margin-top:8px}
    th,td{padding:8px;border-bottom:1px solid var(--border);text-align:center}
    th:first-child,td:first-child{text-align:left}
    tfoot th, tfoot td{font-weight:700}
    .toolbar{display:flex;gap:10px;flex-wrap:wrap;align-items:flex-end}
    input,select{background:#0f172a;color:var(--text);border:1px solid var(--border);border-radius:8px;padding:8px}
    .btn{padding:8px 12px;border:1px solid var(--border);border-radius:8px;background:#111826;color:#fff}
    .btn[aria-disabled="true"]{opacity:.5;pointer-events:none}
    .hidden{display:none}

    /* Cards de fiscalizações */
    .cards-list{display:grid;grid-template-columns:repeat(auto-fit,minmax(280px,1fr));gap:12px}
    .pill{display:inline-block;padding:2px 8px;border-radius:999px;background:#1f2937;font-size:12px;margin-right:6px}
    .kv{display:grid;grid-template-columns:auto 1fr;gap:4px 8px;font-size:13px}
    .kv .k{color:var(--muted)}
  </style>

  <!-- Geração de PDF no cliente -->
  <script defer src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"
          integrity="sha512-YcsIPB2f3O7w0pFzGA9Kp6N3m8hB2ZJzJ8u9nX8N3u4a0v8G7Qm3L2l6s2g9w0m9YgCwz0w7z0w6E7r1o5QFhA=="
          crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>
<body>
  <div class="container">
    <h2 style="margin:0 0 12px">Relatórios — Operações</h2>

    <!-- Filtros -->
    <form id="filtros" class="card toolbar">
      <div>
        <label>De<br/><input type="date" name="from" value="<%= filtrosInit.from %>"></label>
      </div>
      <div>
        <label>Até<br/><input type="date" name="to" value="<%= filtrosInit.to %>"></label>
      </div>
      <div>
        <label>Operação<br/>
          <select name="opId" id="opId">
            <option value="">Selecione…</option>
            <% (ops||[]).forEach(o=>{ %>
              <option value="<%= o.id %>"><%= o.id %> — <%= o.nome %></option>
            <% }) %>
          </select>
        </label>
      </div>
      <div>
        <label>Cidade<br/>
          <select name="cidadeId" id="cidadeId">
            <option value="">Todas</option>
            <% (cidades||[]).forEach(c=>{ %>
              <option value="<%= c.id %>"><%= c.nome %></option>
            <% }) %>
          </select>
        </label>
      </div>
      <button class="btn" type="submit">Aplicar</button>
      <a id="btnCsv" class="btn" href="#" aria-disabled="true">CSV (por cidade)</a>
      <a id="btnXlsx" class="btn" href="#" aria-disabled="true">Excel (.xlsx)</a>
      <button id="btnPdf" class="btn" type="button" aria-disabled="true">PDF</button>
    </form>

    <!-- Conteúdo: oculto até escolher operação -->
    <div id="content" class="hidden">
      <!-- Resumo (KPIs) -->
      <div class="kpi" style="margin:12px 0">
        <div class="box"><div class="label">Fiscalizações</div><div id="k-fisc" class="value">—</div></div>
        <div class="box"><div class="label">Pessoas</div><div id="k-pes" class="value">—</div></div>
        <div class="box"><div class="label">Veículos</div><div id="k-vei" class="value">—</div></div>
        <div class="box"><div class="label">Detidos</div><div id="k-det" class="value">—</div></div>
        <div class="box"><div class="label">Itens apreendidos</div><div id="k-itens" class="value">—</div></div>
        <div class="box"><div class="label">Apreensões</div><div id="k-apr" class="value">—</div></div>
        <div class="box"><div class="label">Multados</div><div id="k-mul" class="value">—</div></div>
        <div class="box"><div class="label">Fechados</div><div id="k-fec" class="value">—</div></div>
        <div class="box"><div class="label">Lacrados</div><div id="k-lac" class="value">—</div></div>
      </div>

      <div class="grid grid-2">
        <!-- Distribuição por cidade -->
        <div class="card">
          <div style="display:flex;justify-content:space-between;align-items:center">
            <div style="font-weight:700">Distribuição por cidade</div>
            <div class="muted" style="font-size:12px">inclui % de participação</div>
          </div>

          <table id="tblCidade">
            <thead>
              <tr>
                <th>Cidade</th>
                <th>Fiscalizações</th>
                <th>% part.</th>
                <th>Pessoas</th>
                <th>Veículos</th>
                <th>Detidos</th>
                <th>Itens</th>
                <th>Apreensões</th>
                <th>Multados</th>
                <th>Fechados</th>
                <th>Lacrados</th>
              </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
              <tr>
                <th>Total</th>
                <th id="t-fisc" class="num"></th>
                <th id="t-part" class="num">100%</th>
                <th id="t-pes"  class="num"></th>
                <th id="t-vei"  class="num"></th>
                <th id="t-det"  class="num"></th>
                <th id="t-itm"  class="num"></th>
                <th id="t-apr"  class="num"></th>
                <th id="t-mul"  class="num"></th>
                <th id="t-fec"  class="num"></th>
                <th id="t-lac"  class="num"></th>
              </tr>
            </tfoot>
          </table>
        </div>

        <!-- Top locais -->
        <div class="card">
          <div style="font-weight:700;margin-bottom:6px">Top locais fiscalizados</div>
          <table id="tblTop">
            <thead><tr><th>Local</th><th>Qtd.</th></tr></thead>
            <tbody></tbody>
          </table>
        </div>
      </div>

      <!-- Lista de fiscalizações (cards) -->
      <div class="card" style="margin-top:12px">
        <div style="font-weight:700;margin-bottom:6px">Fiscalizações</div>
        <div id="fiscCards" class="cards-list"></div>
        <div id="noFisc" class="muted" style="display:none">Nenhuma fiscalização para os filtros escolhidos.</div>
      </div>
    </div>
  </div>

  <!-- Container oculto que usamos para montar o HTML do PDF -->
  <div id="pdf-root" class="hidden"></div>

  <script>
    const qs = (s)=>document.querySelector(s);
    const fmt = (n)=> (n ?? 0).toLocaleString('pt-BR');

    let lastData = null;   // guarda o JSON carregado (/relatorios/data)
    let lastFilters = null; // guarda labels úteis (nome da operação/cidade etc.)

    function getSelectedText(sel){
      const el = typeof sel === 'string' ? qs(sel) : sel;
      const i = el.selectedIndex;
      return i >= 0 ? el.options[i].textContent : '';
    }

    function enableExports(opSelected){
      const btnCsv  = qs('#btnCsv');
      const btnXlsx = qs('#btnXlsx');
      const btnPdf  = qs('#btnPdf');

      if(opSelected){
        btnCsv.removeAttribute('aria-disabled');
        btnXlsx.removeAttribute('aria-disabled');
        btnPdf.removeAttribute('aria-disabled');
      }else{
        btnCsv.setAttribute('aria-disabled','true');
        btnXlsx.setAttribute('aria-disabled','true');
        btnPdf.setAttribute('aria-disabled','true');
      }
    }

    function linkExports(){
      const fd = new FormData(qs('#filtros'));
      const p  = new URLSearchParams(fd);
      qs('#btnCsv').href  = '/relatorios/export.csv?'  + p.toString();
      qs('#btnXlsx').href = '/relatorios/export.xlsx?' + p.toString();
    }

    function renderKPIs(c){
      qs('#k-fisc').textContent = fmt(c.fiscalizacoes);
      qs('#k-pes').textContent  = fmt(c.pessoas);
      qs('#k-vei').textContent  = fmt(c.veiculos);
      qs('#k-det').textContent  = fmt(c.detidos);
      qs('#k-itens').textContent= fmt(c.itensApreendidos);
      qs('#k-apr').textContent  = fmt(c.apreensoes);
      qs('#k-mul').textContent  = fmt(c.multados);
      qs('#k-fec').textContent  = fmt(c.fechados);
      qs('#k-lac').textContent  = fmt(c.lacrados);
    }

    function renderTopLocais(rows){
      const tb = qs('#tblTop tbody');
      tb.innerHTML = (rows||[]).map(r=>`
        <tr>
          <td>${r.local_nome || '-'}</td>
          <td style="text-align:right">${fmt(r.qtd)}</td>
        </tr>
      `).join('');
    }

    function renderPorCidade(rows){
      const tb = qs('#tblCidade tbody');
      const totalFisc = (rows||[]).reduce((s,r)=> s + (Number(r.fiscalizacoes)||0), 0);

      tb.innerHTML = (rows||[]).map(r=>{
        const fisc = Number(r.fiscalizacoes)||0;
        const part = totalFisc ? ((fisc/totalFisc)*100).toFixed(1)+'%' : '—';
        return `
          <tr>
            <td>${r.cidade||'-'}</td>
            <td style="text-align:right">${fmt(fisc)}</td>
            <td style="text-align:right">${part}</td>
            <td style="text-align:right">${fmt(r.pessoas)}</td>
            <td style="text-align:right">${fmt(r.veiculos)}</td>
            <td style="text-align:right">${fmt(r.detidos)}</td>
            <td style="text-align:right">${fmt(r.itens_apreendidos)}</td>
            <td style="text-align:right">${fmt(r.apreensoes)}</td>
            <td style="text-align:right">${fmt(r.multados)}</td>
            <td style="text-align:right">${fmt(r.fechados)}</td>
            <td style="text-align:right">${fmt(r.lacrados)}</td>
          </tr>
        `;
      }).join('');

      const sum = k => (rows||[]).reduce((s,r)=> s + (Number(r[k])||0), 0);
      qs('#t-fisc').textContent = fmt(totalFisc);
      qs('#t-pes').textContent  = fmt(sum('pessoas'));
      qs('#t-vei').textContent  = fmt(sum('veiculos'));
      qs('#t-det').textContent  = fmt(sum('detidos'));
      qs('#t-itm').textContent  = fmt(sum('itens_apreendidos'));
      qs('#t-apr').textContent  = fmt(sum('apreensoes'));
      qs('#t-mul').textContent  = fmt(sum('multados'));
      qs('#t-fec').textContent  = fmt(sum('fechados'));
      qs('#t-lac').textContent  = fmt(sum('lacrados'));
    }

    function renderFiscCards(rows){
      const wrap = qs('#fiscCards');
      const empty = qs('#noFisc');
      if(!rows || rows.length === 0){
        wrap.innerHTML = '';
        empty.style.display = 'block';
        return;
      }
      empty.style.display = 'none';
      wrap.innerHTML = rows.map(r => {
        const flags = [
          r.multado  ? '<span class="pill">Multado</span>'   : '',
          r.fechado  ? '<span class="pill">Fechado</span>'   : '',
          r.lacrado  ? '<span class="pill">Lacrado</span>'   : '',
        ].join('');
        const det = Number(r.pessoas_detidas_qtd)||0;
        const itens = Number(r.itens_apreendidos)||0;

        return `
          <div class="card">
            <div style="display:flex;justify-content:space-between;align-items:center">
              <div><strong>#${r.evento_id}</strong> — ${r.cidade || '-'} </div>
              <div class="muted" style="font-size:12px">${new Date(r.ts).toLocaleString('pt-BR')}</div>
            </div>

            <div style="margin-top:6px">${flags}</div>

            <div class="kv" style="margin-top:8px">
              <div class="k">Tipo do local</div><div>${r.tipo_local || '-'}</div>
              <div class="k">Nome</div><div>${r.local_nome || '-'}</div>
              <div class="k">Endereço</div><div>${r.local_endereco || '-'}</div>
              <div class="k">Pessoas</div><div>${fmt(r.pessoas_abordadas)}</div>
              <div class="k">Veículos</div><div>${fmt(r.veiculos_abordados)}</div>
              <div class="k">Detidos</div><div>${fmt(det)}</div>
              <div class="k">Itens apreendidos</div><div>${fmt(itens)}</div>
              <div class="k">Usuário</div><div>${r.usuario || '-'}</div>
            </div>
          </div>
        `;
      }).join('');
    }

    function buildPdfHtml(){
      const d   = lastData || {};
      const hdr = lastFilters || {};
      const logoSrc = '/public/images/operaco.jpg'; // ajuste se necessário

      // Cabeçalho central com logo + textos
      const header = `
        <div style="text-align:center;margin-bottom:10mm;">
          <img src="${logoSrc}" style="max-height:70px;object-fit:contain" />
          <div style="font-size:22px;font-weight:800;margin-top:6px">C.I.M</div>
          <div style="font-size:14px;margin-top:2px">Centro de Inteligência Metropolitana</div>
        </div>
      `;

      // Card da Operação
      const opCard = `
        <div style="border:1px solid #dcdcdc;border-radius:10px;padding:10px;margin-bottom:8mm;">
          <div style="font-weight:700;margin-bottom:6px">Operação</div>
          <div style="display:grid;grid-template-columns:auto 1fr;gap:4px 8px;font-size:13px">
            <div style="color:#444">ID</div>            <div>${hdr.opId || '-'}</div>
            <div style="color:#444">Nome</div>          <div>${hdr.opNome || '-'}</div>
            <div style="color:#444">Período</div>       <div>${hdr.from || '-'} a ${hdr.to || '-'}</div>
            <div style="color:#444">Cidades</div>       <div>${hdr.cidadeNome || 'Todas'}</div>
            <div style="color:#444">Fiscalizações</div> <div>${fmt(d.cards?.fiscalizacoes)}</div>
            <div style="color:#444">Pessoas</div>       <div>${fmt(d.cards?.pessoas)}</div>
            <div style="color:#444">Veículos</div>      <div>${fmt(d.cards?.veiculos)}</div>
            <div style="color:#444">Detidos</div>       <div>${fmt(d.cards?.detidos)}</div>
            <div style="color:#444">Itens</div>         <div>${fmt(d.cards?.itensApreendidos)}</div>
            <div style="color:#444">Apreensões</div>    <div>${fmt(d.cards?.apreensoes)}</div>
            <div style="color:#444">Multados</div>      <div>${fmt(d.cards?.multados)}</div>
            <div style="color:#444">Fechados</div>      <div>${fmt(d.cards?.fechados)}</div>
            <div style="color:#444">Lacrados</div>      <div>${fmt(d.cards?.lacrados)}</div>
          </div>
        </div>
      `;

      // Cards de fiscalizações
      const cards = (d.fiscList||[]).map(r => {
        const flags = [
          r.multado  ? '<span style="display:inline-block;padding:2px 8px;border:1px solid #ddd;border-radius:999px;margin-right:6px;font-size:11px">Multado</span>'   : '',
          r.fechado  ? '<span style="display:inline-block;padding:2px 8px;border:1px solid #ddd;border-radius:999px;margin-right:6px;font-size:11px">Fechado</span>'   : '',
          r.lacrado  ? '<span style="display:inline-block;padding:2px 8px;border:1px solid #ddd;border-radius:999px;margin-right:6px;font-size:11px">Lacrado</span>'   : '',
        ].join('');
        const det   = Number(r.pessoas_detidas_qtd)||0;
        const itens = Number(r.itens_apreendidos)||0;

        // Se no futuro você adicionar a lista de itens no JSON (ex: r.itens = [{tipo, quantidade, unidade}...]),
        // dá pra listar assim:
        const itensList = (r.itens && r.itens.length)
          ? `<ul style="margin:4px 0 0 18px;padding:0">${r.itens.map(i=>`<li>${i.tipo} — ${fmt(i.quantidade)} ${i.unidade||''}</li>`).join('')}</ul>`
          : '';

        return `
          <div style="border:1px solid #dcdcdc;border-radius:10px;padding:10px;margin-bottom:8px;page-break-inside:avoid">
            <div style="display:flex;justify-content:space-between;align-items:center">
              <div><strong>#${r.evento_id}</strong> — ${r.cidade || '-'}</div>
              <div style="color:#666;font-size:12px">${new Date(r.ts).toLocaleString('pt-BR')}</div>
            </div>
            <div style="margin-top:6px">${flags}</div>
            <div style="display:grid;grid-template-columns:auto 1fr;gap:4px 8px;font-size:13px;margin-top:6px">
              <div style="color:#444">Tipo do local</div><div>${r.tipo_local || '-'}</div>
              <div style="color:#444">Nome</div><div>${r.local_nome || '-'}</div>
              <div style="color:#444">Endereço</div><div>${r.local_endereco || '-'}</div>
              <div style="color:#444">Pessoas</div><div>${fmt(r.pessoas_abordadas)}</div>
              <div style="color:#444">Veículos</div><div>${fmt(r.veiculos_abordados)}</div>
              <div style="color:#444">Detidos</div><div>${fmt(det)}</div>
              <div style="color:#444">Itens apreendidos</div><div>${fmt(itens)}</div>
              <div style="color:#444">Usuário</div><div>${r.usuario || '-'}</div>
            </div>
            ${itensList}
          </div>
        `;
      }).join('');

      return `
        <div style="font-family:Arial,Helvetica,sans-serif;color:#0b1220;">
          ${header}
          ${opCard}
          <div>${cards || '<div style="color:#666">Nenhuma fiscalização no período.</div>'}</div>
        </div>
      `;
    }

    async function printPdf(){
      if(!lastData) return;

      const root = qs('#pdf-root');
      root.innerHTML = buildPdfHtml();
      root.classList.remove('hidden');

      const opt = {
        margin:       10, // mm
        filename:     `relatorio_operacao_${(lastFilters?.opId||'')}.pdf`,
        image:        { type: 'jpeg', quality: 0.98 },
        html2canvas:  { scale: 2, useCORS: true },
        jsPDF:        { unit: 'mm', format: 'a4', orientation: 'portrait' }
      };

      await html2pdf().set(opt).from(root).save();

      root.classList.add('hidden');
      root.innerHTML = '';
    }

    async function load(){
      const opId = qs('#opId').value;
      if(!opId){
        qs('#content').classList.add('hidden');
        enableExports(false);
        return;
      }
      const fd = new FormData(qs('#filtros'));
      const params = new URLSearchParams(fd);

      enableExports(true);
      linkExports();

      const res  = await fetch('/relatorios/data?' + params.toString(), { cache:'no-store' });
      const data = await res.json();
      lastData = data;

      // Captura labels úteis para o PDF
      lastFilters = {
        opId,
        opNome:    getSelectedText('#opId').split('—').slice(1).join('—').trim() || getSelectedText('#opId'),
        cidadeId:  qs('#cidadeId').value || '',
        cidadeNome:getSelectedText('#cidadeId') || 'Todas',
        from:      qs('input[name="from"]').value,
        to:        qs('input[name="to"]').value,
      };

      qs('#content').classList.remove('hidden');
      renderKPIs(data.cards||{});
      renderTopLocais(data.topLocais||[]);
      renderPorCidade(data.porCidade||[]);
      renderFiscCards(data.fiscList||[]);
    }

    // eventos
    qs('#filtros').addEventListener('submit', ev => { ev.preventDefault(); load(); });
    qs('#btnPdf').addEventListener('click', () => { if(!qs('#btnPdf').hasAttribute('aria-disabled')) printPdf(); });

    // inicial: não carregar nada
    enableExports(false);
  </script>
</body>
</html>
