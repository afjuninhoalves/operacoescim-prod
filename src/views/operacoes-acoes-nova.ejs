<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <% //===Variáveis seguras (evitam ReferenceError quando não vierem do render)===const MODE=(typeof mode==='string' ) ?
    mode : 'create' ; const POST_ACTION=(typeof postAction==='string' ) ? postAction : ('/operacoes/' + operacao.id
    + '/fiscalizacoes' ); const FISC=(typeof fisc !=='undefined' && fisc && typeof fisc==='object' ) ? fisc : null;
    const APR_LIST=(typeof apreensoes !=='undefined' && Array.isArray(apreensoes)) ? apreensoes : []; %>

    <title>
      <%= (MODE==='edit' ? 'Editar fiscalização — ' : 'Inserir ações — ' ) + operacao.nome %>
    </title>



    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" crossorigin="" />

    <style>
      :root {
        --bg: #0b1220;
        --panel: #0f172a;
        --panel2: #111827;
        --border: #1f2937;
        --muted: #9ca3af;
        --text: #e5e7eb;
        --blue: #2563eb;
        --green: #22c55e;
        --red: #ef4444;
        --radius: 14px;
        --shadow: 0 10px 30px rgba(0, 0, 0, .35);
      }

      * {
        box-sizing: border-box
      }

      body {
        margin: 0;
        background: var(--bg);
        color: var(--text);
        font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Arial
      }

      a {
        color: inherit;
        text-decoration: none
      }

      .topbar {
        position: sticky;
        top: 0;
        z-index: 10;
        background: linear-gradient(180deg, rgba(17, 24, 39, .9), rgba(17, 24, 39, .7));
        border-bottom: 1px solid var(--border);
        backdrop-filter: saturate(140%) blur(8px)
      }

      .topbar-inner {
        max-width: 1160px;
        margin: 0 auto;
        padding: 12px 16px;
        display: flex;
        gap: 8px;
        align-items: center;
        justify-content: space-between
      }

      .brand {
        display: flex;
        gap: 10px;
        align-items: center;
        font-weight: 700
      }

      .badge {
        display: inline-grid;
        place-items: center;
        width: 30px;
        height: 30px;
        border-radius: 10px;
        background: linear-gradient(135deg, var(--blue), #0ea5e9);
        color: #fff;
        font-weight: 900;
        box-shadow: 0 6px 16px rgba(37, 99, 235, .35)
      }

      .btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 10px 14px;
        border-radius: 10px;
        border: 1px solid var(--border);
        background: #111826;
        color: var(--text);
        cursor: pointer
      }

      .btn:hover {
        filter: brightness(1.06)
      }

      .btn-primary {
        background: var(--blue);
        color: #fff;
        border-color: rgba(37, 99, 235, .5)
      }

      .btn-ghost {
        background: #0b1325
      }

      .btn-red {
        background: var(--red);
        color: #fff;
        border-color: #991b1b
      }

      .btn[disabled] {
        opacity: .6;
        cursor: not-allowed
      }

      .container {
        max-width: 1160px;
        margin: 0 auto;
        padding: 20px 16px 40px
      }

      .card {
        background: linear-gradient(180deg, var(--panel), var(--panel2));
        border: 1px solid var(--border);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        padding: 18px
      }

      .muted {
        color: var(--muted)
      }

      .pill {
        display: inline-block;
        padding: 4px 10px;
        border-radius: 999px;
        border: 1px solid var(--border);
        background: #0b1325;
        color: #93c5fd
      }

      .actions {
        display: flex;
        gap: 8px;
        flex-wrap: wrap
      }

      .grid {
        display: grid;
        gap: 18px
      }

      .grid.two {
        grid-template-columns: 1.2fr .8fr
      }

      @media (max-width:980px) {
        .grid.two {
          grid-template-columns: 1fr
        }
      }

      label {
        font-size: 13px;
        color: var(--muted);
        display: block;
        margin-bottom: 6px
      }

      input[type="text"],
      input[type="number"],
      textarea,
      select,
      input[type="file"] {
        width: 100%;
        padding: 11px 12px;
        border-radius: 10px;
        border: 1px solid var(--border);
        background: #0b1325;
        color: var(--text);
        outline: none
      }

      textarea {
        min-height: 90px;
        resize: vertical
      }

      .row {
        display: flex;
        gap: 14px;
        flex-wrap: wrap
      }

      .row>.col {
        flex: 1 1 220px
      }

      .geo-card {
        margin-top: 16px
      }

      #pickMap {
        height: 300px;
        border-radius: 12px
      }

      .geo-status {
        color: var(--muted);
        font-size: 12px
      }

      .hide {
        display: none
      }

      .geo-ok {
        color: #22c55e;
        font-weight: 600
      }

      .geo-err {
        color: #ef4444;
        font-weight: 600
      }

      .apr-item {
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 10px;
        display: flex;
        justify-content: space-between;
        gap: 10px
      }

      .apr-kind {
        font-weight: 600
      }

      .apr-meta {
        font-size: 12px;
        color: var(--muted)
      }

      .apr-actions {
        display: flex;
        gap: 8px
      }

      .empty {
        border: 1px dashed var(--border);
        border-radius: 12px;
        padding: 12px;
        text-align: center;
        color: var(--muted)
      }

      .modal-backdrop {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, .5);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 50
      }

      .modal {
        width: min(560px, 92vw);
        background: linear-gradient(180deg, var(--panel), var(--panel2));
        border: 1px solid var(--border);
        border-radius: 16px;
        box-shadow: var(--shadow);
        padding: 16px
      }

      .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px
      }

      .modal-title {
        font-weight: 700
      }
    </style>
</head>

<body>

  <div class="topbar">
    <div class="topbar-inner">
      <div class="brand">
        <span class="badge">CIM</span>
        <div>
          Operações CIM
          <div class="muted">
            <div class="muted">
              <%= (MODE==='edit' ? 'Editar fiscalização — ' : 'Inserir ações — ' ) + operacao.nome %>
            </div>
          </div>
        </div>
        <div class="actions">
          <a class="btn" href="/operacoes/<%= operacao.id %>">Voltar</a>
          <a class="btn" href="/operacoes/<%= operacao.id %>/fotos">Fotos</a>
          <a class="btn" href="/registros?opId=<%= operacao.id %>">Registros</a>
        </div>
      </div>
    </div>

    <div class="container">
      <div class="card">
        <div class="row" style="justify-content:space-between">
          <div>
            <h2 style="margin:0 0 6px">Operação <%= operacao.nome %>
            </h2>
            <div class="muted">
              Agendada para: <strong>
                <%= operacao.inicio_fmt || operacao.inicio_agendado %>
              </strong>
              · Status: <span class="pill">
                <%= operacao.status %>
              </span>
            </div>
            <div class="muted">Cidades: <%= operacao.cidades_str %>
            </div>
          </div>
        </div>
      </div>

      <!-- GEO -->
      <div class="card geo-card">
        <h3 style="margin:0 0 10px">Localização (opcional)</h3>
        <div class="row" style="align-items:center;margin-bottom:10px">
          <button type="button" class="btn" id="btnGPS">Usar GPS</button>
          <button type="button" class="btn" id="btnManual">Marcar no mapa</button>
          <label style="display:flex;align-items:center;gap:8px;cursor:pointer;">
            <input type="checkbox" id="ckAttach" checked>
            Anexar localização às fotos
          </label>
          <span class="geo-status" id="geoStatus">Anexar localização: ligado. Use GPS ou marque no mapa.</span>
        </div>
        <div id="mapWrap" class="hide">
          <div id="pickMap"></div>
        </div>
      </div>

      <!-- GRID principal -->
      <div class="grid two" style="margin-top:16px">

        <!-- Form da FISCALIZAÇÃO -->
        <form class="card" id="formFiscalizacao" method="post" action="<%= POST_ACTION %>" enctype="multipart/form-data"
          autocomplete="off" novalidate>
          <input type="hidden" name="lat" class="geo-lat" value="<%= (FISC && FISC.lat) != null ? FISC.lat : '' %>">
          <input type="hidden" name="lng" class="geo-lng" value="<%= (FISC && FISC.lng) != null ? FISC.lng : '' %>">
          <input type="hidden" name="acc" class="geo-acc"
            value="<%= (FISC && (FISC.acc ?? FISC.accuracy)) != null ? (FISC.acc ?? FISC.accuracy) : '' %>">

          <input type="text" name="tipo_local" required value="<%= (FISC && FISC.tipo_local) || '' %>">
          <input type="text" name="local_nome" value="<%= (FISC && FISC.local_nome) || '' %>">
          <input type="text" name="local_endereco" value="<%= (FISC && FISC.local_endereco) || '' %>">
          <textarea name="obs"><%= (FISC && FISC.obs) || '' %></textarea>

          <input type="number" name="pessoas_abordadas"
            value="<%= (FISC && FISC.pessoas_abordadas)  != null ? FISC.pessoas_abordadas  : 0 %>">
          <input type="number" name="veiculos_abordados"
            value="<%= (FISC && FISC.veiculos_abordados) != null ? FISC.veiculos_abordados : 0 %>">

          <label><input type="checkbox" name="multado" <%=(FISC && FISC.multado) ? 'checked' : '' %> > Multado</label>
          <label><input type="checkbox" name="fechado" <%=(FISC && FISC.fechado) ? 'checked' : '' %> > Fechado</label>
          <label><input type="checkbox" name="lacrado" <%=(FISC && FISC.lacrado) ? 'checked' : '' %> > Lacrado</label>
          <!-- JSON com as N apreensões -->
          <input type="hidden" name="apreensoes_json" id="apreensoes_json">

          <h3 style="margin:0 0 10px">Fiscalização</h3>

          <div class="row">
            <div class="col">
              <label>Tipo de local <span class="muted">(obrigatório)</span></label>
              <input type="text" name="tipo_local" placeholder="ex: bar, ferro-velho, baile" required
                value="<%= (fisc && fisc.tipo_local) || '' %>">
            </div>
            <div class="col">
              <label>Nome do local</label>
              <input type="text" name="local_nome" placeholder="ex: Bar do Zé"
                value="<%= (fisc && fisc.local_nome) || '' %>">
            </div>
          </div>

          <div class="row" style="margin-top:10px">
            <div class="col">
              <label>Endereço</label>
              <input type="text" name="local_endereco" placeholder="ex: Rua X, 123 — Centro"
                value="<%= (fisc && fisc.local_endereco) || '' %>">
            </div>
            <div class="col">
              <label>Observações</label>
              <textarea name="obs" rows="3" placeholder=""><%= (fisc && fisc.obs) || '' %></textarea>
            </div>
          </div>

          <div class="row" style="margin-top:10px">
            <div class="col">
              <label>Pessoas abordadas</label>
              <input type="number" min="0" name="pessoas_abordadas" inputmode="numeric"
                value="<%= (fisc && fisc.pessoas_abordadas)!=null ? fisc.pessoas_abordadas : 0 %>">
            </div>
            <div class="col">
              <label>Veículos abordados</label>
              <input type="number" min="0" name="veiculos_abordados" inputmode="numeric"
                value="<%= (fisc && fisc.veiculos_abordados)!=null ? fisc.veiculos_abordados : 0 %>">
            </div>
          </div>

          <div class="row" style="margin-top:10px">
            <label style="display:flex;align-items:center;gap:8px">
              <input type="checkbox" name="multado" <%=(fisc && fisc.multado)? ' checked' : '' %> > Multado
            </label>
            <label style="display:flex;align-items:center;gap:8px">
              <input type="checkbox" name="fechado" <%=(fisc && fisc.fechado)? 'checked' : '' %> > Fechado
            </label>
            <label style="display:flex;align-items:center;gap:8px">
              <input type="checkbox" name="lacrado" <%=(fisc && fisc.lacrado)? 'checked' : '' %> > Lacrado
            </label>
          </div>

          <div style="margin-top:12px">
            <label>Fotos (câmera ou galeria)</label>
            <input type="file" name="fotos" accept="image/*" capture="environment" multiple>
          </div>

          <div class="muted geo-status" style="margin-top:6px">Localização: aguardando…</div>

          <hr style="border-color:#1f2937; margin:14px 0">

          <div class="row" style="justify-content:space-between;align-items:center">
            <h4 style="margin:0">Apreensões</h4>
            <button type="button" class="btn btn-primary" id="btnAddApr">Adicionar apreensão</button>
          </div>

          <div class="row" style="justify-content:space-between;margin-top:14px">
            <div class="muted geo-status">Localização: aguardando…</div>
            <button class="btn btn-primary" id="btnSubmit" type="submit">
              <%= MODE==='edit' ? 'Salvar alterações' : 'Salvar fiscalização' %>
            </button>
          </div>
        </form>

        <!-- Painel direito: lista de apreensões -->
        <div class="card">
          <div class="row" style="justify-content:space-between;align-items:center">
            <h3 style="margin:0">Apreensões desta fiscalização</h3>
            <span class="pill" id="aprCount">0 itens</span>
          </div>
          <div id="aprList" style="margin-top:12px;display:flex;flex-direction:column;gap:10px">
            <div class="empty">Nenhuma apreensão adicionada. Clique em <strong>Adicionar apreensão</strong>.</div>
          </div>
        </div>

      </div>
    </div>

    <!-- MODAL de Apreensão -->
    <div class="modal-backdrop" id="aprModalBk" aria-hidden="true">
      <div class="modal" role="dialog" aria-modal="true">
        <div class="modal-header">
          <div class="modal-title" id="aprModalTitle">Nova apreensão</div>
          <button class="btn btn-ghost" type="button" id="aprClose">Fechar</button>
        </div>

        <form id="aprForm" onsubmit="return false;">
          <div class="row">
            <div class="col">
              <label>Tipo</label>
              <input type="text" id="apr_tipo" placeholder="ex: cigarro, bebida, droga" required>
            </div>
            <div class="col">
              <label>Quantidade</label>
              <input type="number" min="0" step="any" id="apr_quantidade" placeholder="0" inputmode="decimal">
            </div>
            <div class="col">
              <label>Unidade</label>
              <input type="text" id="apr_unidade" placeholder="ex: pacotes, garrafas, kg">
            </div>
          </div>

          <div style="margin-top:10px">
            <label>Observações</label>
            <textarea id="apr_obs" rows="3" placeholder=""></textarea>
          </div>

          <div class="row" style="justify-content:flex-end;margin-top:12px">
            <button class="btn btn-ghost" type="button" id="aprCancel">Cancelar</button>
            <button class="btn btn-primary" type="submit" id="aprSave">Salvar</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Bootstrap de dados para modo edição -->
    <script>
      window.INIT = {
        mode: "<%= MODE %>",
        postAction: "<%= POST_ACTION %>",
        fisc: <%- JSON.stringify(FISC || {}) %>,
        apreensoes: <%- JSON.stringify(APR_LIST) %>
  };
    </script>


    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" crossorigin=""></script>
    <script>
      (() => {
        const $ = (s, r = document) => r.querySelector(s);
        const $$ = (s, r = document) => Array.from(r.querySelectorAll(s));

        /* ===== GEO ===== */
        const statusEl = $('#geoStatus');
        const ckAttach = $('#ckAttach');
        const btnGPS = $('#btnGPS');
        const btnManual = $('#btnManual');
        const mapWrap = $('#mapWrap');

        function syncHidden(lat, lng, acc) {
          $$('.geo-lat').forEach(i => i.value = (ckAttach.checked ? (lat ?? '') : ''));
          $$('.geo-lng').forEach(i => i.value = (ckAttach.checked ? (lng ?? '') : ''));
          $$('.geo-acc').forEach(i => i.value = (ckAttach.checked ? (acc ?? '') : ''));
          $$('.geo-status').forEach(s => {
            if (!s) return;
            if (ckAttach.checked && lat && lng) {
              s.textContent = 'Localização capturada';
              s.classList.add('geo-ok'); s.classList.remove('geo-err');
            } else if (!ckAttach.checked) {
              s.textContent = 'Localização NÃO será anexada';
              s.classList.remove('geo-ok'); s.classList.add('geo-err');
            } else {
              s.textContent = 'Aguardando localização…';
              s.classList.remove('geo-ok', 'geo-err');
            }
          });
        }
        function setStatus(msg) { statusEl.textContent = msg; }

        let map, marker, accuracyCircle;
        const DEFAULT_VIEW = [-14.235004, -51.92528];
        const DEFAULT_ZOOM = 4;

        function ensureMap() {
          if (map) return;
          mapWrap.classList.remove('hide');
          map = L.map('pickMap');
          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 19, attribution: '&copy; OpenStreetMap' }).addTo(map);
          map.setView(DEFAULT_VIEW, DEFAULT_ZOOM);
          map.on('click', (e) => { if (!ckAttach.checked) return; placeMarker(e.latlng.lat, e.latlng.lng, null, 'manual'); });
        }

        function placeMarker(lat, lng, acc, source) {
          if (!map) ensureMap();
          const ll = L.latLng(lat, lng);
          if (!marker) {
            marker = L.marker(ll, { draggable: true }).addTo(map);
            marker.on('dragend', (ev) => {
              const p = ev.target.getLatLng();
              syncHidden(p.lat.toFixed(6), p.lng.toFixed(6), acc ?? '');
              setStatus(`Local definido manualmente: ${p.lat.toFixed(6)}, ${p.lng.toFixed(6)}`);
            });
          } else { marker.setLatLng(ll); }

          if (accuracyCircle) { map.removeLayer(accuracyCircle); accuracyCircle = null; }
          if (acc && acc > 0) { accuracyCircle = L.circle(ll, { radius: acc }).addTo(map); }

          map.setView(ll, Math.max(map.getZoom(), 15));
          syncHidden(lat.toFixed(6), lng.toFixed(6), acc ? Math.round(acc) : '');
          setStatus(source === 'gps'
            ? `GPS: ${lat.toFixed(6)}, ${lng.toFixed(6)} (±${acc ? Math.round(acc) : '?'}m)`
            : `Local definido manualmente: ${lat.toFixed(6)}, ${lng.toFixed(6)}`);

          try { localStorage.setItem('ocim_last_geo', JSON.stringify({ lat, lng })); } catch { }
        }

        function useGPS() {
          if (!('geolocation' in navigator)) { setStatus('GPS não suportado.'); return; }
          ensureMap();
          setStatus('Solicitando GPS…');
          navigator.geolocation.getCurrentPosition(
            (pos) => {
              const { latitude, longitude, accuracy } = pos.coords || {};
              if (!latitude || !longitude) { setStatus('Falha ao obter coordenadas.'); return; }
              placeMarker(latitude, longitude, accuracy, 'gps');
            },
            (err) => {
              let msg = 'Não foi possível obter o GPS.';
              if (err && err.code === 1) msg = 'Permissão de localização negada.';
              if (err && err.code === 2) msg = 'Posição indisponível.';
              if (err && err.code === 3) msg = 'Tempo excedido.';
              setStatus(msg + ' Você pode marcar no mapa.');
            },
            { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }
          );
        }

        btnGPS.addEventListener('click', useGPS);
        btnManual.addEventListener('click', () => {
          ensureMap();
          setStatus('Clique no mapa para definir a localização.');
          try {
            const last = JSON.parse(localStorage.getItem('ocim_last_geo') || 'null');
            if (last && typeof last.lat === 'number' && typeof last.lng === 'number') {
              map.setView([last.lat, last.lng], 15);
            }
          } catch { }
        });

        ckAttach.addEventListener('change', () => {
          if (!ckAttach.checked) { syncHidden('', '', ''); setStatus('Localização NÃO será anexada.'); }
          else { setStatus('Anexar localização: ligado. Use GPS ou marque no mapa.'); }
        });

        const isMobile = /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);
        if (isMobile) { useGPS(); } else { setStatus('Anexar localização: ligado. Use GPS ou marque no mapa.'); }

        /* ===== APREENSÕES (UI + JSON) ===== */
        const apreensoes = [];
        let editingIndex = -1;

        const aprListEl = $('#aprList');
        const aprCountEl = $('#aprCount');
        const jsonInput = $('#apreensoes_json');

        const bk = $('#aprModalBk');
        const mTit = $('#aprModalTitle');
        const mTipo = $('#apr_tipo');
        const mQtd = $('#apr_quantidade');
        const mUni = $('#apr_unidade');
        const mObs = $('#apr_obs');
        const mClose = $('#aprClose');
        const mCancel = $('#aprCancel');
        const mForm = $('#aprForm');

        function openModal(title, data = null, idx = -1) {
          mTit.textContent = title;
          editingIndex = idx;
          mTipo.value = data?.tipo || '';
          mQtd.value = (data?.quantidade ?? '') === null ? '' : (data?.quantidade ?? '');
          mUni.value = data?.unidade || '';
          mObs.value = data?.obs || '';
          bk.style.display = 'flex';
          mTipo.focus();
        }
        function closeModal() { bk.style.display = 'none'; }

        $('#btnAddApr').addEventListener('click', () => openModal('Nova apreensão'));
        mClose.addEventListener('click', closeModal);
        mCancel.addEventListener('click', closeModal);

        mForm.addEventListener('submit', () => {
          const tipo = String(mTipo.value || '').trim();
          if (!tipo) { mTipo.focus(); return; }
          const rawQtd = mQtd.value;
          const quantidade = rawQtd === '' ? null : Number(rawQtd);
          if (quantidade !== null && !Number.isFinite(quantidade)) { mQtd.focus(); return; }
          const unidade = String(mUni.value || '').trim() || null;
          const obs = String(mObs.value || '').trim() || null;

          const item = { tipo, quantidade, unidade, obs };
          if (editingIndex >= 0) apreensoes[editingIndex] = { ...apreensoes[editingIndex], ...item };
          else apreensoes.push(item);

          renderApr();
          closeModal();
        });

        function renderApr() {
          aprListEl.innerHTML = '';
          if (!apreensoes.length) {
            aprListEl.innerHTML = '<div class="empty">Nenhuma apreensão adicionada. Clique em <strong>Adicionar apreensão</strong>.</div>';
            aprCountEl.textContent = '0 itens';
            jsonInput.value = '[]';
            return;
          }
          apreensoes.forEach((a, i) => {
            const wrap = document.createElement('div');
            wrap.className = 'apr-item';
            wrap.innerHTML = `
            <div>
              <div class="apr-kind">${escapeHtml(a.tipo || '—')}</div>
              <div class="apr-meta">
                ${(a.quantidade != null && a.quantidade !== '') ? escapeHtml(String(a.quantidade)) : '—'}
                ${a.unidade ? escapeHtml(a.unidade) : ''}
                ${a.obs ? ' · ' + escapeHtml(a.obs) : ''}
              </div>
            </div>
            <div class="apr-actions">
              <button type="button" class="btn btn-ghost" data-ed="${i}">Editar</button>
              <button type="button" class="btn btn-red" data-del="${i}">Excluir</button>
            </div>
          `;
            aprListEl.appendChild(wrap);
          });
          aprCountEl.textContent = apreensoes.length + (apreensoes.length === 1 ? ' item' : ' itens');
          jsonInput.value = JSON.stringify(apreensoes);

          aprListEl.querySelectorAll('[data-ed]').forEach(b => b.addEventListener('click', (ev) => {
            const idx = Number(ev.currentTarget.getAttribute('data-ed'));
            openModal('Editar apreensão', apreensoes[idx], idx);
          }));
          aprListEl.querySelectorAll('[data-del]').forEach(b => b.addEventListener('click', (ev) => {
            const idx = Number(ev.currentTarget.getAttribute('data-del'));
            apreensoes.splice(idx, 1);
            renderApr();
          }));
        }

        function escapeHtml(s) {
          return String(s).replace(/[&<>"']/g, c => ({ '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": "&#39;" }[c]));
        }

        const submitBtn = $('#btnSubmit');
        $('#formFiscalizacao').addEventListener('submit', () => {
          jsonInput.value = JSON.stringify(apreensoes);
          submitBtn.disabled = true;
          setTimeout(() => submitBtn.disabled = false, 4000);
        });

        const params = new URLSearchParams(location.search);
        if (params.get('open') === 'apr') { document.getElementById('btnAddApr').click(); }

        // ======== MODO EDIÇÃO: preencher tudo ========
        const INIT = window.INIT || {};
        if (INIT.mode === 'edit') {
          // preenche o form:
          const f = INIT.fisc || {};
          document.querySelector('[name="tipo_local"]').value = f.tipo_local || '';
          document.querySelector('[name="local_nome"]').value = f.local_nome || '';
          document.querySelector('[name="local_endereco"]').value = f.local_endereco || '';
          document.querySelector('[name="pessoas_abordadas"]').value = f.pessoas_abordadas ?? 0;
          document.querySelector('[name="veiculos_abordados"]').value = f.veiculos_abordados ?? 0;
          document.querySelector('[name="multado"]').checked = !!f.multado;
          document.querySelector('[name="fechado"]').checked = !!f.fechado;
          document.querySelector('[name="lacrado"]').checked = !!f.lacrado;
          document.querySelector('[name="obs"]').value = f.obs || '';

          // carrega as apreensões no painel direito:
          apreensoes.splice(0, apreensoes.length, ...(INIT.apreensoes || []));
          renderApr();
        }


        renderApr();
      })();
    </script>
</body>

</html>